===================================
Semantic text: I18N. Equivalencias.
===================================

* I18N. Un ejemplo
* Equivalencias
 	* Gramáticas equivalentes
	* Gramáticas transformables (o convertibles)
	* Extensiones
* Una última reflexión

Este capítulo puede parecer complejo al principio, pero de hecho veréis que es 
algo muy natural. De hecho, pensaréis... ¿por qué no lo hemos usado antes?

La mejor forma de trabajar es empezar por un ejemplo, y después entraremos en el tema de
una forma más formal.

	
****************	
I18N. Un ejemplo
****************	
	
Vamos a hacer un ejemplo sencillo. Por ejemplo un documento de una actriz/actor:

+++++++++++++++++++++++++++++++++++++++++++++++++++++
Actress:
	Name: Jennifer Love Hewitt
	Birthday: 2/21/1979
	Filmography:
		Film:
			Title:  Munchie
			Year: 	1992
		Film:
			Title: 	Sister Act 2: Back in the Habit
			Year:	1993
+++++++++++++++++++++++++++++++++++++++++++++++++++++


La gramática es bastante sencilla:


+++++++++++++++++++++++++++++++++++++++++++++++++++++
Type Name: 
	Name: actor
	Alias: acress
	Type: NODE
	Child:
		Type: name 
		Num: 1
	Child:
		Type: birthday 
		Num: 1
	Child:
		Type: filmography 
		Num: 1
Type Name:
	Name: filmography
	type: NODE
	Child:
		Type: film
		Num: +
Type Name:
	Name: film
	Type: NODE
	Child:
		Type: title
		Num: 1
	Child:
		Type: year
		Num: 1
Type Name:
	Name: name
	Type: TEXT
Type Name:
	Name: birthday
	Type: TEXT
Type Name:
	Name: title
	Type: TEXT
Type Name:
	Name: year
	Type: TEXT
+++++++++++++++++++++++++++++++++++++++++++++++++++++


Ahora, imaginemos que queremos la misma información en castellano, pero en vez de
traducir todo, hacemos una gramática casi igual, pero con alias en castellano.

La gramática quedaría como:


+++++++++++++++++++++++++++++++++++++++++++++++++++++
Type Name: 
	Name: actor
	Alias: acress
	Alias: actriz
	Type: NODE
	Child:
		Type: name 
		Num: 1
	Child:
		Type: birthday 
		Num: 1
	Child:
		Type: filmography 
		Num: 1
Type Name:
	Name: filmography
	Alias: Filmografía
	type: NODE
	Child:
		Type: film
		Num: +
Type Name:
	Name: film
	Alias: película
	Type: NODE
	Child:
		Type: title
		Num: 1
	Child:
		Type: year
		Num: 1
Type Name:
	Name: name
	Alias: Nombre
	Type: TEXT
Type Name:
	Name: birthday
	Alias: Fecha de nacimiento
	Type: TEXT
Type Name:
	Name: title
	Alias: Título
	Type: TEXT
Type Name:
	Name: year
	Alias: Año
	Type: TEXT
+++++++++++++++++++++++++++++++++++++++++++++++++++++


Y el documento podría quedar de la siguiente forma:


+++++++++++++++++++++++++++++++++++++++++++++++++++++
Actriz:
	Nombre: Jennifer Love Hewitt
	Fecha de nacimiento: 2/21/1979
	Filmografía:
		Película:
			Título:	Munchie
			Año: 	1992
		Película:
			Título: Sister Act 2: Back in the Habit
			Año:	1993
+++++++++++++++++++++++++++++++++++++++++++++++++++++

Ya tenemos un documento igual pero en perfecto castellano!!
Bien, ¿y ahora que? Bueno, estos documentos tienen algo en común...


			La forma compactada es la misma!! (A excepción del Namespace)
			

Bien, esto es algo muy importante, ya que para traducir de uno a otro sólo
es necesario pasar a forma compactada y cambiar el namespace... y ya está!

Éste es un caso de gramáticas equivalentes, aquí no hablaremos de I18N, ya que buscamos algo
incluso más genérico que eso. Buscamos relaciones entre lenguajes, y de ésto irán los siguientes
capítulos.

Pero una aplicación muy interesante es la que acabamos de hacer


			Una buena forma de internacionalizar es crear una gramática equivalente
			en otro idioma.
			
			
******************
(**) Equivalencias
******************

Vamos a hablar de relaciones que se pueden hacer entre distintas gramáticas, y 
de sus posibles transformaciones. Realmente este tema podría dar mucho
más de sí, pero yo sólo quiero reflexionar un poco, y mostrar ciertas
cosas.
   
----------------------------
(**) Gramáticas equivalentes
----------------------------

			Dos gramáticas son equivalentes si cualquier documento tiene la misma forma compactada (a excepción del namespace del primer nodo).

Este es el ejemplo anterior de internacionalización, en el que hacíamos que la forma compactada fuera la misma.

De otra forma, dos gramáticas son equivalentes si tienen los mismos nombres canónicos, y una estructura de hijos iguales.
Ésto es debido a que cualquier programa debería mirar solamente el nombre canónico, que es el referente.
Una de las ventajas de ésto es que la I18N es casi directa, como hemos visto en el apartado anterior.

Esto es muy útil, ya que podemos decir que los lenguajes son prácticamente iguales. Esto permitiría hacer migraciones
futuras, y todo una serie de trabajos automatizados de una forma muy sencilla.

-----------------------------------------------
(**) Gramáticas transformables (o convertibles)
-----------------------------------------------

		  	Una gramática B es transformable en A si al hacer la forma compactada, sólo cambiando el namespace
  		  	del nodo original de B, se puede parsear por A (es decir, que los canónicos de B son o bien
  		  	canónicos de A o alias de A).
  		  
  		  
Creo que la definición está bastante clara, es como decir que es como un subconjunto de otro lenguaje más grande.

Otra aplicación podría ser crear puentes entre diferentes documentos. Se puede crear un tipo de documento sirva como transformador
de un lenguaje a otro. Esto se haría combinando alias de uno con nombres canónicos, de forma que la transformación
fuera casi dierecta.  

Nota: La compactada de éste se puede leer por el namespace de destino (de forma completa),
	aunque no tiene por que ser la forma inversa!! Es como una forma de inclusión...
	Si los dos fueran transformables -> equivalentes! Yo creo que sí! Lo dejo como ejercicio matemático :-) 
Nota (reflexión): Las transformables son una forma fácil de passar de un lenguaje a otro; es como un xslt ya implementado!!!!
Nota: Creo que sería interesante pensar también en transformaciones a partir de la forma compactada. Al cambiar el nombre del nodo y el nivel se puede llegar
	a una estructura muy distinta de la original, incluso con la posibilidad de eliminar también líneas si no son válidas en la gramática
	de destino
Nota: Creo que éste es un tema demasiado complejo para abordarlo en estos momentos, pero como punto de partida es muy intersante. 
  
----------------
(**) Extensiones
----------------

Las extensiones son como las gramáticas transformables, pero miradas desde la gramática de destino.

		  	Una gramática A es un extensión de B si al hacer la forma compactada de B (sólo cambiando el namespace
  		  	del nodo original), se puede parsear por A (es decir, que los canónicos de B son o bien
  		  	canónicos de A o alias de A).

Esto nos dice que A es una ampliación de B. Aquí lo que hacemos es ampliar la funcionalidad de B, pero permitimos
la compatibilidad a la inversa. Es decir, que si tenemos documentos de B también puedan usarse.


**************************
(***) Una última reflexión
**************************

He estado tentado de poner las extensiones, las gramáticas transformables y las equivalencias en 
la definición de una gramática, pero he obtado por dejar la definición original tal como está.
Queremos que sea muy sencilla, y creo que es lo adecuado para la primera definición. 
Además, tampoco queremos hacer cosas del estilo: A extends B, ya que puede hacer todo
demasiado difícil para los no informáticos. Empezaríamos con problemas de extensión
múltiple, si o no, qué pasa cuando cambia una definición de un namespace del que no tenemos control,
puede ser bastante complicado todo.

Si se quiere ya habrá tiempo para hacerlo. De hecho, no hay nada que impida a alguien hacer 
su propia gramática distinta a lo que se plantea en este libro :-O 

Quien sabe, habrá una batalla de gramáticas base? :-D Yo he presentado una,
pero quizá la w3c haga otra, más bonita y útil, y la mía se vea arrinconada. Bueno,
no pasa nada, estubo bien como primera incursión en este mundo, y ya habrá servido
para algo.

Siempre pienso que a la gente quizá le hubirea gustado que tubieramos para texto
una propiedad //pattern// com expresiones regulares, pero siempre he pensado que eso era muy
técnico, demasiado ligado a Informática, y no muy semántico (//muy sintáctico!!//).



