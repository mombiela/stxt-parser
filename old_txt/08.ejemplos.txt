============================
Ejemplos y otras tecnologías
============================

* Ejemplos
	* Wikipedia
* STXT y otras tecnologias
	* Lightweight markup language
	* tex, latex
	* (**) json
	* otros

********
Ejemplos
********

Hay miles de ejemplos que se pueden hacer con esta tecnología. Es tan sencillo como coger un 
ejemplo cualquiera de otro lenguaje y ver como se escribiría en STXT. Quizá lo más simple
sea un ejemplo que venga de XML, ya que tienen muchos paralelismos con STXT (el siguiente capítulo
trata sobre este tema en particular).

Muchos ejemplos que cogeré son de www.w3schools.com. Es una gran fuente de recursos para aprender
tecnologías asociadas a la web.

Un ejemplo de xml sería:

+++++++++++++++++++++++++++++++++++++++++++++++
<bookstore>
   <book category="COOKING">
     <title lang="en">Everyday Italian</title>
     <author>Giada De Laurentiis</author>
     <year>2005</year>
     <price>30.00</price>
   </book>
   <book category="CHILDREN">
     <title lang="en">Harry Potter</title>
     <author>J K. Rowling</author>
     <year>2005</year>
     <price>29.99</price>
   </book>
   <book category="WEB">
     <title lang="en">Learning XML</title>
     <author>Erik T. Ray</author>
     <year>2003</year>
     <price>39.95</price>
   </book>
 </bookstore>
+++++++++++++++++++++++++++++++++++++++++++++++

Lo mismo pasado a STXT:

+++++++++++++++++++++++++++++++++++++++++++++++
Bookstore (www.examples.com/demo.stxt):

Book: 
	Category: COOKING
	Title: Everyday Italian
	Language: EN
	Author: Giada De Laurentiis
	Year: 2005
	Price: 30.00
Book: 
	Category: CHILDREN
	Title: Harry Potter
	Language: EN
	Author: J K. Rowling
	Year: 2005
	Price: 29.99
Book:
	Category: WEB
	Title: Learning XML
	Language: EN
	Author: Erik T. Ray
	Year: 2003
	Price: 39.95
+++++++++++++++++++++++++++++++++++++++++++++++

Otro ejemplo en XML:

++++++++++++++++++++++++++++++++++++++++++++++
<note>
<date>2008-01-10</date>
<to>Tove</to>
<from>Jani</from>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>
++++++++++++++++++++++++++++++++++++++++++++++

En STXT se transforma en:

++++++++++++++++++++++++++++++++++++++++++++++
Note (www.example.com/demo.stxt):

Date: 2008-01-10
To: Tove
From: Jani
Heading: Reminder
Body: Don't forget me this weekend!
++++++++++++++++++++++++++++++++++++++++++++++

Vemos que la conversión entre los 2 formatos es instantánea, aunque mucho más
bonito el STXT. Por cierto, el STXT //tiene// una gramática, mientras
que el XML no la tiene hasta que se le aplique un dtd o xsd. 
 
**************
(**) Wikipedia
**************

Tengo gran admiración por la wikipedia. Creo que es uno de los mejores proyectos que se han creado en Internet.
¿Como se podría beneficiar de STXT? Bien, la wikipedia podría tener plantillas diferentes: actores, políticos, serie tv, película, ciudades, países, ríos,... 
compartiendo gramáticas en muchos casos (por ejemplo actores y políticos pueden tener biografía, pero actores listado de películas,...).

Además, sería muy interesante la mezcla de STXT con el lenguaje propio de la wikipedia. Creo que éste es un punto en
el que STXT gana a la mayoría de lenguajes. La mezcla con los llamados "lightweight markup languajes" es 
realmente espectacular. Así, se pueden hacer textos mixtos del estilo:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Biography (www.wikipedia.org/actor.stxt):
	 
Nombre real: Scarlett Ingrid Elena Johansson 
Nacimiento: Bandera de los Estados Unidos Nueva York, Estados Unidos
Fecha de nacimiento: 22 de noviembre de 1984 
Edad: 28 años
Ocupación: Actriz, modelo y cantante

Descripción:
	[[Archivo:Scarlett Johansson in Kuwait 02 (looking left).jpg|thumb|left|190px|Scarlett Johansson el 20 de enero 
	de 2008 en una reunión con cerca de 600 militares en Camp Buehring ([[Kuwait]]). 
	Scarlett realizó una gira de cinco días en el [[Golfo Pérsico]] para la [[United Service Organizations]].]]
	Johansson nació en la ciudad de [[Nueva York]] el [[22 de noviembre]] de [[1984]]. Su padre, 
	[[Karsten Johannson]] es oriundo de [[Dinamarca]] y [[arquitecto]] de profesión, y su madre 
	Melanie Sloan es [[productor de cine|productora de cine]] y proviene de una familia de origen
	[[asquenazí]] del [[condado de los Estados Unidos|condado]] neoyorquino del [[Bronx]].
	Desde su niñez se preparó para ser actriz y para ello 
	estudió primero en el [[Professional's Children School]] de Manhattan y cuando fue 
	un poco mayor en el prestigioso ''[[Lee Strasberg Theatre Institute]]''. 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 

Otra ventaja es que con STXT no solamente tendríamos "plantillas" de como debe ser la información de un personaje, sinó que también
podríamos aplicar estilos y formatos dependiendo del tipo de documento.

************************
STXT y otras tecnologias
************************

---------------------------
Lightweight markup language
---------------------------

Los lenguajes ligeros de marcado han tenido un auge espectacular gracias a proyectos como la Wikipedia.
Gracias a ellos se puede definir texto de forma mucho más simple que teniendo que escribir etiquetas
como HTML. Pero tienen una gran carencia: No tienen una estructura ni una semántica clara. Es mas, 
prácticamente todos se ocupan del estilo del texto: ésto es importante (negrita), cursiva, listas
de elementos, y varias cosas más.  

Resulta sorprendente ver lo que podemos conseguir si unimos estos lenguajes con STXT. Obtenemos
texto fácil de interpretar, con una semántica definida y con la expresividad del otro lenguaje.

Un ejemplo:

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Producto:
	Nombre: Magic memory
	Precio: 10€
	Descripción:
		Este producto produce un //mágico rejuvenecimiento//
		de la memoría y proporciona un **inmediato** efecto
		en todas las personas que lo prueban.
		
		Efectos:
		
		* Rápida memorización
		* Aprendizaje automático
		* Mayor concentración
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Vemos que hemos dado estructura gracias a STXT, pero la descripción
se ha dado mediante CREOLE (otro lenguaje que pretende ser
el estándard en las wikis).

				La unión de STXT con Lightweight markup
				languages es simplemente espectacular
				
----------
tex, latex
----------

Perdonad si critico mucho. Nunca lo hago sin dar una alternativa o un motivo. Me gustan las críticas 
constructivas ;-)
He visto que uno de los objetivos de TeX es que un documento se imprima igual ahora y dentro de 100 años.
Me había parecido perfecto... hasta hoy. Ahora creo que el objetivo debería ser que significara
lo mismo ahora que dentro de 100 años, y que se //entienda// ahora y dentro de 100 años. Y cuanta 
más gente mejor. Esto no se consigue con TeX, pero Sí con STXT. Un documento se entiende hoy
y dentro de 100 años.

¿Como creo que debe evolucionar? Yo haría documentos en STXT, especificaría una gramática para
los distintos tipos de documentos, permitiría elementos de TeX (como fórmulas) de la misma
forma que se hace con los lenguajes de marcado ligeros, y usaría TeX como motor de renderizado (creo
que hoy en día es imbatible, y creo que lo va a ser durante al menos 100 años más ;-)

¿Como quedaría un documento? Bien, yo haría algo del estilo (perdonad mi desconocimiento):

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Artículo (www.latex.com/article.stxt):
	Título:
	Autor:
	Referencias:
		Referencia:
			Título:
			Año:
			ISBN:
		Referencia:
			Título:
			Año:
			ISBN:
	Artículo:
		Párrafo:
			Esto es una forma matemática:
			
			\begin{eqnarray}
			x&=&y\\
			x^2&=&xy\\
			x^2-y^2&=&xy-y^2\\
			(x+y)(x-y)&=&y(x-y)\\
			x+y&=&y\\
			2y&=&y\quad \mbox{(por la primera ecuación)}\\
			2&=&1
			\end{eqnarray}
			
		Párrafo:
			Otro párrafo o otra cosa!
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

De hecho, ahora ya podemos pensar en STXT, quizá sea el momento de hacer
fórmulas de otra forma, o notación más simplificada, como por
ejemplo:


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Artículo (www.latex.com/article.stxt):
	Título:
	Autor:
	Referencias:
		Referencia:
			Título:
			Año:
			ISBN:
		Referencia:
			Título:
			Año:
			ISBN:
	Artículo:
		Párrafo:
			Esto es una forma matemática:

		Fórmula:					
			Array:
				Element: x&=&y
				Element: x^2&=&xy
				Element: x^2-y^2&=&xy-y^2
				Element: (x+y)(x-y)&=&y(x-y)
				Element: x+y&=&y
				Complex:
					Element: 2y&=&y\quad 
					Element: mbox{(por la primera ecuación)}
							 2&=&1
		Párrafo:
			Otro párrafo o otra cosa!
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Bien, hay miles de posibilidades y formas de enfocar el problema, 
os lo dejo como ejercicio ;-D

¿Qué hemos ganado? 

Facilidad en creación de documento STXT:

	* UTF-8
	* Estructura definida
	* Texto semántico
	* Texto entendible
	
Y además hemos mantenido la compacidad en la creación de fórmulas matemáticas, y otros
elemenos dónde TeX sí es realmente un gran lenguaje.

---------
(**) json
---------

JSON en principio no tiene nada que ver con STXT, pero hay ciertos momentos
en los que puede ser competición directa. Estoy pensando en servicios
web mediante REST. Yo apuesto por STXT, ya que es tan fácil (o más)
de parsear que JSON, y dota a los documentos de un significado evidente.
Además, es más flexible y fácil de leer cuando incrustamos gran cantidad
de texto, cosa que en JSON hay que tener en cuenta siempre todos los
carácteres de escapamiento.

Pero no hace falta preocuparse mucho. Aparte de servicios web, no creo 
que JSON y STXT sean competencia directa, debido a su distinto ámbito de
aplicación.

-----
otros
-----

Hay otros lenguajes que se pueden parecer a STXT, pero creo que ninguno
se ha hecho con el mismo enfoque. Estoy pensando en YAML, por ejemplo, que tiene ciertos
parecidos en la forma en que usa la identación, o CofeeScript, que teniendo un
aspecto a veces similar no tiene nada que ver con STXT.

El objetivo de STXT es dotar de una estructura y de una semántica al documento,
al mismo tiempo que permite un aspecto legible para la mayoría de personas.


