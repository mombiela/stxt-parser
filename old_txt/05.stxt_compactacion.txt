================================
Semantic text: Compactación (**)
================================

* Análisis de la información de stxt
* Una forma de compactación
* Otros ejemplos
* Utilidad

**********************************
Análisis de la información de stxt
**********************************

Este capítulo trata sobre la compactación de documentos STXT.
Vamos a modificar un documento para hacerlo más compacto, de forma que sea más rápido de parsear y 
contenga la misma información.

Para ello debemos analizar el contenido de un documento.

Un documento es sólo un conjunto de nodos con una cierta identación, con lo que realmente la 
información es de //orden// y de //nivel//.

Vamos a verlo en un ejemplo:

+++++++++++++++++++++++++++++++++++++++++++++
Nodo0 (www.example.com/...):
	Nodo1:
		Nodo2: Texto Nodo2
		Nodo3: Texto Nodo3
	Nodo4:
		Nodo5: Texto Nodo5
		Nodo6: Texto Nodo6
			Continuación texto
			Otra linea de texto
		Nodo7:
			Nodo8:
				Nodo9: Última linea
+++++++++++++++++++++++++++++++++++++++++++++


Vemos que hay 10 Nodos en este documento.
El primer nodo es Nodo0, y es el que contiene a los demás. Podríamos decir
que es el primero en aparecer (orden) y tiene nivel 0 (no está identado y contiene a los demás).
El segundo nodo es Nodo1. Es el segundo en aparecer y tiene nivel 1. De esta forma podríamos
cualificar todas las líneas, y extraer la información. No es difícil de hacer una tabla con esta
información:

Orden		Nodo		Nivel
-----       ---- 		-----
1			Nodo0		0
2			Nodo1		1
3			Nodo2		2
4			Nodo3		2
5			Nodo4		1
6			Nodo5		2
7			Nodo6		2
8			Texto		3
9			Texto		3
10			Nodo7		2
11			Nodo8		3
12			Nodo9		4

Ahora sólo se trata de incluir esta información. De ésto trata la siguiente sección.

*************************
Una forma de compactación
*************************

A partir de la tabla anterior, vamos a proponer una forma de compactar la información.
Será algo tan fácil como insertar el número de nivel en vez de utilizar tabuladores, y
separarlo con el carácter habitual ':'.

Así, el ejemplo anterior quedaría como:

+++++++++++++++++++++++++++++++++++++++++++++++
0:Nodo0 (www.example.com/...):
1:Nodo1:
2:Nodo2: Texto Nodo2
3:Nodo3: Texto Nodo3
1:Nodo4:
2:Nodo5: Texto Nodo5
2:Nodo6: Texto Nodo6
3:Continuación texto
3:Otra linea de texto
2:Nodo7:
3:Nodo8:
4:Nodo9: Última linea
+++++++++++++++++++++++++++++++++++++++++++++

Realmente, todavía hay información redundante, ya que el primer nodo siempre tiene nivel 0 (de hecho los parsers supondrán que es -1), y los de nivel 1
podrían suponerse de nivel 0. De esta forma habrá programas que llegarán a dejarlo de la siguiente forma:

+++++++++++++++++++++++++++++++++++++++++++++++
Nodo0 (www.example.com/...):
Nodo1:
1:Nodo2: Texto Nodo2
2:Nodo3: Texto Nodo3
Nodo4:
1:Nodo5: Texto Nodo5
1:Nodo6: Texto Nodo6
2:Continuación texto
2:Otra linea de texto
1:Nodo7:
2:Nodo8:
3:Nodo9: Última linea
+++++++++++++++++++++++++++++++++++++++++++++

Como comentario personal diré que a mi me gusta más que todos los nodos tengan un nivel (menos el primero)
ya que lo considero más estético y fácil de leer. También es la forma como lo he implementado 
si miráis en el Apéndice 2.
Según mis preferencias quedaría así:
 
+++++++++++++++++++++++++++++++++++++++++++++++
Nodo0 (www.example.com/...):
1:Nodo1:
2:Nodo2: Texto Nodo2
3:Nodo3: Texto Nodo3
1:Nodo4:
2:Nodo5: Texto Nodo5
2:Nodo6: Texto Nodo6
3:Continuación texto
3:Otra linea de texto
2:Nodo7:
3:Nodo8:
4:Nodo9: Última linea
+++++++++++++++++++++++++++++++++++++++++++++
 
Hay una regla básica para la compactación también:

		El nombre del nodo siempre será el principal, y si hubieran alias serán substituidos
		
Esta regla es importante, ya que normalmente los nombres son más cortos que los alias, y a su vez es 
más rápido de parsear un documento de esta forma.

Finalmente tener en cuenta que las líneas de texto que pertenecen a un nodo tendrán siempre un nivel superior al nodo 
al que pertenecen. En el ejemplo anterior se ve que después del Nodo6 (con nivel 2) hay dos líneas de texto
que le pertenecen, las dos con nivel 3.

Realmente, la regla para compactar es así de simple:

		Substituir los tabuladores de inicio por "número de tabuladores + ':'"

**************
Otros ejemplos
**************

Si compactamos la receta de los buñuelos, nos quedaría el siguiente texto:

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Receta(www.kocinando.com/receta1.stxt):
1:Título: Buñuelos de Girona
2:
1:Descripción:Esta es una receta para hacer buñuelos en la época de Cuaresma. Son conocidos
2:también como Buñuelos del Empordà. Normalmente son servidos
2:como postre, y hay cantidad suficiente hasta para 12 personas. Es una receta
2:fácil de hacer.
2:
1:Ingredientes:1Kg harina
2:8 huevos
2:la ralladura de 1-2 limones
2:150 gramos de azúcar
2:100 gramos mantequilla
2:1/4 litro de leche
2:1 vaso de grassolis (mezcla de moscatel, anís, cointreau)
2:75 gramos de levadura (de panadería)
2:matalauva (anís)
2:una pizca de sal
2:un poquito de canela molida
2:
1:Preparación:En un recipiente pondremos la harina y el resto de ingredientes.
2:La mantequilla se funde con un poco de leche, al igual que la levadura. 
2:La leche para deshacer la levadura sólo tiene que estar ligeramente templada,
2:ya que de lo contrario perdería seguramente su efecto.
2:Se mezcla todo muy bien, y se deja reposar tapado por espacio de 3-5 horas
2:(hasta que sube la masa).
2:Con una cuchara o cucharadita según se quieran de tamaño, se fríen en abundante
2:aceite hasta coger color. Conforme se van sacando se espolvorean con un poco 
2:de la mezcla del grassolis, y se pasan por azúcar.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Vamos a ver como queda la compactación de un ejemplo que veíamos en el capítulo de las gramáticas.
Teníamos los datos de un cliente, y compactado queda como:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Cliente(www.gymstxt.com/client.stxt):
1:Datos Personales:
2:Nombre: Shila
2:Primer apellido: Kween
2:Edad:28
2:Cliente vip:1
2:Foto:R0lGODlhlgCNALMAAFtepau07X2I1tvg+pOe42dwwMPK9vz+/AAAAAAAAAAAAAAAAAAAAAAAAAAA
3:AAAAACH5BAAAAAAALAAAAACWAI0AAwT/8MhJq7046827/2AojmRpnmiqrmzrvnAsz3Rt3/Vg7Mbg
3:D7igsATUBQgCAYEQ2AGH0KGPR9XxAkdBIdl8Rr8qK3bJxJp5vosBmxQEvOA4yIhdvw/PonVt2OjI
3:fXKCF1ZpPzsuA1hwg18DBDoVa0sde04bPQc9aY1Ra14+AUmQB00Se3RMO1h4lxisEoGdQgZMOrdK
3:TwZKWW2jZUcBW25XmRaPEnezQZ8UvLFIvErAaKsFwb3RZZsSpAHLOM2nbhRLyh0CkXqTWkjmTQS1
3:jOAwfBMD5BOitx/f86fBFJGJ9o3eDCT38nUzUxCDkR61qnGiwKfIGAGnDL7YdwohQCak/wh1mdJE
3:gJ1gA0dOiveIjChZGlO07GgyVi1bFYws4WOsFJ5jq+os4QLSpBZXMU3g1OEGyJtteOiY0kAgw8oj
3:maykS7frEMykICa1wvkGW0V+HM61qgPnUcMD8dxMbfUVLAclfZqY6nEEiayeaUnWORY1pKYm1zBS
3:QGt3AxlNB8hZGeqlbgamWeuGmjRSUToAHCVZbjxhV7we8b6VTV26AxpFrQ79mKgGibB4hEaTxlsK
3:5FpVd2jnRLpwZIidopQ4BEwaD6RArJvUevtzOO1bokgoeiRwy79YzTNSclqr1CTmkkDdKsL3lOzZ
3:PxbfA4LkWlQ13+ndOu18EZ+5arhX3f9aO0BShB+RSIJHO5qMphs4f1TVRzxVCaXMP9zM5wpsHMQ3
3:IHil5JIgUI3R8cNOQV1IHVAZUrAiYRpwUsBpws1n13RdMIHRIrglg94pP+oT44MClnINELoR2Yg5
3:V3D1hzFr1GSdHy8WyUEgBhSwXX5BziIXPPLUMdcYOalF1WUf9AHENc9poKQcbgFDY0R5aAFKeR5w
3:GKAHfUyoyoNdDoKVGyDtMZcWBcgyAABVfdAoIR9MoYmWb+QHmUa2+AWJam8EguijcM0YaZUfIvhD
3:olVZ+uYXPA20yWCTFgAATADMSGpO6aTQ5wFsXuqQpXH4Nw1s8qhZ6xblEAqqm0xY5Qf/lpBxMSIG
3:q0rRhShH+HREGrcxSsGMpr2ZHLVmVgBLGmtc0+Key4w0LA9c4TEjg8kQY1SHtv3DXwbK3beDG+lY
3:Om0jfQ5gq3n4RDuKqPIKZacf8y47nTgXaNHaDjNKeN8Ft8aRLikVdirMwoohxM6MAmeca0dhkroF
3:tEYugZ2z9GDBsGqbFKDzLigbXFAZoOmGz7z2xVISZhhsUVAkpsm8MiHAfsFEoq1EpgnAkGjxjV80
3:ARAvx0nMmGgaXD3XrwWMNtQn1mdTW7NHmVRlTgG9qdJ2N7PWGJkSShz5Bt1UvFQquIFMAXA7qtZc
3:9DeIJGrfS39aMLJPktiGdRkGnqfc/1yLluUePgbXuqzkNUupWksEaOmDSSzNE/qu5Wg6dVyI4LMj
3:MY8awKgim6C2qM6jK7iM7ezBhc+4faQj4T9h++rZnzt4LQy6uCFGeSmg5ZgdE4y+HGPUUpiEpA86
3:HgWZXr6aaxvlR7zMOM9JUE/TzMJEtA9IOif3oN4ec7NJG8iKW67+oYhraEkxovBOn5Kjrs9x4jnS
3:wYumHiGrrTBsOcuonU/csQWNhWg98qnPFrwWilEQC36wmJS3xrKLYCQjMjoA3vPywz8wmMIpkYmG
3:6irVFUJJQ2e10gIAalWgJOTFPMCrCT4Ylbqm9GUapHhSAERXxCSBTwgsSYbBtBC/nv8gRlYvi0iW
3:wDhERvHthcnTUjJIiAc2eE0uGXuVjt4IidQFD0SzOFcvuHA9CsoKNAUUBmKm0TdZNWpXyBLGrFoD
3:EDC6r43RKKM7zOG2ZSylFjo7in8SCEYRirBWQ4xkEwl1E7HVygzSkkQZs+UcIB7LiPEjUQZ/Yg2A
3:XWoXQuwb3wbiyCB6TV3TmVoZC1lGUPqilxISQDHB9SXXXZEWUUkO3xjXG51Z85ep0eEydQY6gdRC
3:mdyES1+G8ccOouiToGTUhFhpgWoJwSmIItoVhgLETLqjDWcoptf0yU9ftMNyZawnokTHN6V5pkod
3:Y1XqisnFSxUQjErURhLukbo/pvP/WNZMoncYyIsKKnOILzNi6hrSwOGAA5NbyORHkXW1UBqobrsg
3:IkWSAFJEhU1rypzGGLFZL41y8zRUk8AzcvLMcNTnnjMqJtB+qYz6dFQxH+Ei69JVT87sNEuyGOUd
3:OjU0tcXSRcNjx7byRxSbKjNzRiJnUEtREkrtK56NautRcOMZrTXoOaFjo8HWisdG1OGAPVAXJeRl
3:yCH6o30FDZp0ssS6vWhiCUn8Qz1nhZppoOSQaxhmMi5YiqLeYJxmQIJAHoUkYWJkOhRUZnB4Jooe
3:qYkvBK2oMa3RQVupjR1DzIvFGNmJhGXpsnBRjofwQQCQ3qS1ycnCy9gIIsmGsoJA/5yGd/J3vQaN
3:c4hWUKMmPGuD83gtLqqZKDai8dHnZswd7fvbUdAFnqGBVKmI+pf4nmYegNXzb/5wJw6e0sRdlGdc
3:yVCJImtaOZuZkSIg2mlAbUXI54wOvBVFVBa2e1KMnZJSIeoRkNgyYNHphaaaRfCAEnvKUdaEneVo
3:YROdilX9GjV0bfBJljRcpoEScShCHCJUGcmPOJU3iE9o1jHSYUA7phSXGmlDEHckr4DFKJ5GWUJA
3:IVXAe3yCd5zgDrVod+SdJTAmWvKoT4gXNaceq6YYajJ1FnGPbWVAFfPiImhyKCVwjEF3O4uEncBH
3:0056xyFGupvRLkJD1gHslxjhjv9HwJG1zAJzb4hAhxDB9b2+GQZSbrLgFFPqFCPsuBOI8G9xsxdc
3:AF2G0JH+FRdpLIKXKG2fneYdqwV1CztUEDVcC8FiLxND85VgbkoIJYUjIeTeFqy+OnaLoF0za/mE
3:rVx8QumoE60m7FxaEKkqnHKZ2L4XkO27LtaibGvVRmpGK6FBINZibsNYbXh7b5w9ju3KuIpag2ew
3:gkpVVPo00pGNjLuAjsW8AW5dEA9rD5/jaxxe2pKCtLuDbSC4+pAkDJaOoCrBJugTPCfwZUOBFfKF
3:ie1CykcUtDZWRRNBESP8NDS0kbiDMJAb/ryYZ+NY4vq4RsUtLoKpzXxnssCGeXz/IwdTTDNLF5ja
3:G1iHgnaHLdyPta81E7SdNTRILjgPQ2oAhkkMbaNNJthrf0vAhbB10BjBkRBn0D2DRUBxKNfWxx9g
3:MzAQqLRU/dhlELmJZX5H5RF4igLvyr4Tha/bDJ2FOgvxXgnLqhV6tNwE+WAFBR0Ng0LT04AguWL1
3:EnSB8X4widjEJg2cuOe1tlB80xM4CrjQbgOj4FTY2XscNigtuVk4Ryjosq8hQNagDGmWZZySyQWd
3:gPZ5ss0wRssLdv8lv6iFwiO4KBRFIB49U6jo1nDuBOnk4dR9G4M5QKLeBPuDKZ8XAutDu13fWF3k
3:hssfijvEu5Vc8/IiYaDVvW+H/8AqpnBRZAd1VwPRYAfLgw/vh3iGMAVjFCXgw0k55koCxQhVd1Rc
3:lQlUwDPftx2xwRrMQBTyoA4UokWRcFhFUFHRACwFJFWIJX5clAeX8E1cAxF6sAgJ5HA8cT6bonoX
3:B0XigyVP0Q1I0iBw0XHWtGgHshjpQhQiKAoyxTsAIUEdiCUwZ0cr8xToIx0plAPSQA63lTCd9XdH
3:8xPtwyZxlxN2Q35lGBKV0Q5bVUfP9wmiNRV50QWboCP7ZXmb4iKrczpD+E3QQk+M1ReUR1HjdoSa
3:UXFygUs74SKq4HpCWDV7kQpZBwJkED9rdlDWh0OTAi0toTW1AnjpNxzlQy8ukv9RidFBZrJYDXcY
3:6/YqgHgDhuYKntKHBaILV0N3QKAsZocoW5ITpUEcC4JRBiQ9UNMpttEoy5J6F8F2TecqxfNY4iQh
3:+uYpbbI2xjNQUvUqIqYHbQZSZCRTbvMzlFQbeTEQNiBNoXYgokVJoCNwcPEa5QZ4ObZSkQMQVbcK
3:EahP9NVOCcI3o4GAkIRvM4BPBfNNbAIRaiId4PEUxCIQ9fdjxqQXVIAiKKVj+pRq+DEVCURDC/kY
3:NFBxPdIdP/VyTjEYecEXtbN0dABO4DhM5mRmyxRQEwUoVjM/mgckXdF2nNZIbdB5kHGOrPAQxsM4
3:yJhdFqVP5wVi7wWTB/RSVhH/eDEEAm4WA4yYXyuWL/egg2RBV3t4B5TASTNpURnFT0e2FaNojqd4
3:HDyoeW1ACrjkQmmGStCALhcoVKrhSkqZlAFlR2w0FKYmOS03UXCCItsSJfLgJv0hZPGyHeaGgL9T
3:llLWlEw0CisUXGUQI9nhHsIgCH/xHw6JIBlGhqzkH9WBgEC0KKsWEN9kdnMGJLywPwpBfLOgkjPh
3:GmtRGilUFhOhA8dSgFcjDRhTKIthO1t4DHSzlZtJMNXjjNVGKvuXPuCWDg0xFAK4HFzwIOyUBos2
3:CLAYFviYAbuWByTULFrWikPyJVShHuI0PNA2JLFxattVOF4DQ6UBkghiWWdi5SOBGQdapnLbdSum
3:UCnYozxEYDsKIUsCopFw4oyEoSTIYB6hsj7aIYOfVpz40VthB5Ru8lpjRAxEECW5EAI1FB4bwwGH
3:pIgl+iy/dYZuUokmWjXYoy44t3SmEaNgkCVBcwLfIBf9iKM4UFxywaOu50JAOgT/xINaUUcOeqS6
3:AjwuaomD+J5OCgNveUckajccWKU0EBdDlQKMIz5c2nbWF6UjoDYwOqZbdhItEChqqitG4IotYG5v
3:6gLpx6Aygad1aqd72qd++qeAGqiCOqiEWqiGeqiImqiKuqiM2qiO+qiQGqlyEAEAOw==
1:Datos Bancarios:
2:Titular cuenta: Joan Costa Mombiela
2:Número cuenta: 0000-0000-00-000000000
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

********
Utilidad
********

La utilidad de la compactación es crear un formato un poco más eficiente de STXT, que igualmente sea fácil de leer
y escribir por humanos. Con los números de nivel también es muy sencillo de leer, y para las máquinas tiene
algunas ventajas:

* El tamaño del fichero acostumbra a ser inferior
* El parseo del fichero es más rápido, ya que no hay que calcular el nivel a través de tabuladores (o espacios)

También puede usarse en transformaciones de ficheros, pero esto se verá más adelante (capítulo 7).

