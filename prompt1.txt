"Semantic Text" es un lenguaje que nos hemos inventado. Se puede abreviar como stxt.
Consiste en unos namespace que definen como son los elementos (nodos) de ese namespace.
Con esta definición se crean documentos, que consisten en nodos anidados. Para anidarlos
se usa identación, con 4 espacios entre ellos para cada identación.
Las líneas que empiezan por '#' se consideran comentarios y no se usan. 
Ejemplo senzillo de identación, con un nodo principal documento, formado por subelementos que pueden tener otros: 
 
documento:
    titulo: El título del documento
    autor: El nombre autor
    
# esta línea es un comentario

    cuerpo:
        Esta es una línea del cuerpo
        Esta es otra línea del cuerpo
    fecha creación:
	secciones:
        seccion:
		    nombre: Nombre sección 1
            contenido: Nombre contenido 1
        seccion:
            nombre: Nombre sección 2
            contenido: Nombre contenido 2
            
Si has entendido esto te pasaré ejemplos completos funcionales para que lo acabes de entender.
¿Todo bien hasta aquí?


[Adjuntar documentos]
Te he pasado 3 documentos: 
* intro_programacion.stxt es el documento funcional de ejemplo. 
* documento.stxt especifica como debe ser un documento del namespace 'com.dokumentando.documento'
* namespace.stxt indica como se construyen los namespace. 
¿Los has entendido bien hasta aquí?



Primero quiero ver que has entendido todo bien.
Puedes inventarte un namespace llamado 'www.cocinadeliciosa.com/receta.stxt' con un nodo principal receta? 
Este nodo podrá tener la estructura que tu consideres adecuada para describir una receta. 
Recuerda que los childs sólo pueden tener como elementos Name, Namespace(sólo si es distinto al principal) y Count. No pueden tener type, ya que el type sólo se define en el Node.
Una vez tengas el namespace, me gustaría que me hicieras un documento del namespace 'www.cocinadeliciosa.com/receta.stxt' que fuera una receta de pizza de jamón.




